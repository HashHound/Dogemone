name: Build and Release Nightly

on:
  schedule:
    - cron: '0 0 * * *'  # This runs the workflow every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-ubuntu-2004:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libboost-all-dev libssl-dev zip

      - name: Build
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make

      - name: Archive Release Artifacts
        run: |
          cd build/src
          zip -r ubuntu-20.04-build.zip ./*

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-20.04-build
          path: build/src/ubuntu-20.04-build.zip

  build-ubuntu-2204:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libboost-all-dev libssl-dev zip

      - name: Build
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make

      - name: Archive Release Artifacts
        run: |
          cd build/src
          zip -r ubuntu-22.04-build.zip ./*

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-22.04-build
          path: build/src/ubuntu-22.04-build.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew install cmake boost openssl

      - name: Build
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make

      - name: Archive Release Artifacts
        run: |
          cd build/src
          zip -r macos-build.zip ./*

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: build/src/macos-build.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ github.run_id }}
          release_name: Nightly Build ${{ github.run_id }}
          draft: false
          prerelease: true

      - name: Upload Release Asset (Ubuntu 20.04)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu-20.04-build.zip
          asset_name: ubuntu-20.04-build.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Ubuntu 22.04)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu-22.04-build.zip
          asset_name: ubuntu-22.04-build.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos-build.zip
          asset_name: macos-build.zip
          asset_content_type: application/zip
