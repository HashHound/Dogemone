name: Build and Release

on:
  schedule:
    - cron: '0 0 * * *' # Run every day at midnight
  push:
    tags:
      - 'v*' # Trigger on tag push

jobs:
  build-ubuntu-20:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake libboost-all-dev libssl-dev
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-20-binaries
          path: build/

  build-ubuntu-22:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake libboost-all-dev libssl-dev
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-22-binaries
          path: build/

  build-hiveos:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake libboost-all-dev libssl-dev
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hiveos-binaries
          path: build/

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
      - name: Install dependencies
        run: |
          pacman -S --noconfirm base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-binaries
          path: build/

  release:
    needs: [build-ubuntu-20, build-ubuntu-22, build-hiveos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download ubuntu-20 build artifacts
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-20-binaries
          path: ubuntu-20-binaries/
      - name: Download ubuntu-22 build artifacts
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-22-binaries
          path: ubuntu-22-binaries/
      - name: Download hiveos build artifacts
        uses: actions/download-artifact@v2
        with:
          name: hiveos-binaries
          path: hiveos-binaries/
      - name: Download windows build artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-binaries
          path: windows-binaries/
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: true
          files: |
            ubuntu-20-binaries/**
            ubuntu-22-binaries/**
            hiveos-binaries/**
            windows-binaries/**
